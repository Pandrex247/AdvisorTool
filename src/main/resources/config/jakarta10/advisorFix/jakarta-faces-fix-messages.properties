# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2023 Payara Foundation and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://github.com/payara/Payara/blob/master/LICENSE.txt
# See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at glassfish/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# The Payara Foundation designates this particular file as subject to the "Classpath"
# exception as provided by the Payara Foundation in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#
jakarta-faces-namespace-upgrade-component=This issue won't affect your application. \n \
To prevent future issues replace old namespaces with the new.
jakarta-faces-namespace-upgrade-composite=This issue won't affect your application. \n \
To prevent future issues replace old namespaces with the new.
jakarta-faces-namespace-upgrade-passthrough=This issue won't affect your application. \n \
To prevent future issues replace old namespaces with the new.
jakarta-faces-namespace-upgrade-html=This issue won't affect your application. \n \
To prevent future issues replace old namespaces with the new.
jakarta-faces-namespace-upgrade-core=This issue won't affect your application. \n \
To prevent future issues replace old namespaces with the new.
jakarta-faces-namespace-upgrade-facelets=This issue won't affect your application. \n \
To prevent future issues replace old namespaces with the new.
jakarta-faces-namespace-upgrade-jsf=This issue won't affect your application. \n \
To prevent future issues replace old namespaces with the new.
jakarta-faces-namespace-upgrade-xmlns-jsf=This issue won't affect your application. \n \
To prevent future issues replace prefix with the new more appropriated without use of jsf.
jakarta-faces-namespace-upgrade-xmlns=This issue won't affect your application. \n \
To prevent future issues replace prefix with the new more appropriated without use of jsf.
jakarta-faces-remove-resolver=Your application won't work, \
  please remove ResourceResolver class because it will not compile in Jakarta EE 10
jakarta-faces-remove-state-manager-1=Your application won't work, \
  please remove StateManager.saveSerializedView(FacesContext context) call.
jakarta-faces-remove-state-manager-2=Your application won't work, \
  please remove StateManager.saveView(FacesContext context) call.
jakarta-faces-remove-state-manager-3=Your application won't work, \
  please remove StateManager.getTreeStructureToSave(FacesContext context) call.
jakarta-faces-remove-state-manager-4=Your application won't work, \
  please remove StateManager.getComponentStateToSave(FacesContext context) call.
jakarta-faces-remove-state-manager-5=Your application won't work, \
  please remove StateManager.writeState(FacesContext context, SerializedView state) call.
jakarta-faces-remove-state-manager-6=Your application won't work, \
  please remove StateManager.restoreView(FacesContext facesContext, String s, String s1) call.
jakarta-faces-remove-state-manager-7=Your application won't work, \
  please remove StateManager.restoreTreeStructure(FacesContext context, String viewId, String renderKitId) call.
jakarta-faces-remove-state-manager-8=Your application won't work, \
  please remove StateManager.restoreComponentState(FacesContext context, UIViewRoot viewRoot, String renderKitId) call.
jakarta-faces-remove-state-manager-9=Your application won't work, \
  please remove StateManager.SerializedView call.
jakarta-faces-remove-state-manager-10=Your application won't work, \
  please remove call for empty constructor for the class StateManagerWrapper
jakarta-faces-remove-state-manager-11=Your application won't work, \
  please remove StateManagerWrapper.saveSerializedView(FacesContext context) call for any of the available subclasses.
jakarta-faces-remove-state-manager-12=Your application won't work, \
  please remove StateManagerWrapper.saveView(FacesContext context) call for any of the available subclasses.
jakarta-faces-remove-state-manager-13=Your application won't work, \
  please remove StateManagerWrapper.getTreeStructureToSave(FacesContext context) \
  call for any of the available subclasses.
jakarta-faces-remove-state-manager-14=Your application won't work, \
  please remove StateManagerWrapper.getComponentStateToSave(FacesContext context) \
  call for any of the available subclasses.
jakarta-faces-remove-state-manager-15=Your application won't work, \
  please remove StateManagerWrapper.writeState(FacesContext context, SerializedView state) call \
  for any of the available subclasses.
jakarta-faces-remove-state-manager-16=Your application won't work, \
  please remove StateManagerWrapper.restoreView(FacesContext context, String viewId, String renderKitId) \
   call for any of the available subclasses.
jakarta-faces-remove-state-manager-17=Your application won't work, \
  please remove StateManagerWrapper.restoreTreeStructure(FacesContext context, String viewId, String renderKitId) \
   call for any of the available subclasses.
jakarta-faces-remove-state-manager-18=Your application won't work, \
\n please remove StateManagerWrapper.restoreComponentState(FacesContext context, UIViewRoot viewRoot, String renderKitId) \
   call for any of the available subclasses.
jakarta-faces-remove-constant-name-1=Your application won't work, \
\n please remove UIComponent.CURRENT_COMPONENT call, instead use method UIComponent.getCurrentComponent() from the class.
jakarta-faces-remove-constant-name-2=Your application won't work, \
\n please remove UIComponent.CURRENT_COMPOSITE_COMPONENT call, \ \
  instead use method UIComponent.getCurrentCompositeComponent() from the class.
jakarta-faces-remove-constant-name-3=Your application won't work, \
  please remove UIComponent.HONOR_CURRENT_COMPONENT_ATTRIBUTES_PARAM_NAME call.
jakarta-faces-remove-mbinding=Your application won't work, \
\n please remove class MethodBinding and replace with the class \
  jakarta.el.MethodExpression from Jakarta Expression Language
jakarta-faces-remove-valuebinding=Your application won't work, \
\n please remove class ValueBinding and replace with the class \
  jakarta.el.ValueExpression from Jakarta Expression Language
jakarta-faces-remove-variableresolver=Your application won't work, \
\n please remove class VariableResolver and replace with the class \
  jakarta.el.ELResolver from Jakarta Expression Language
jakarta-faces-remove-referencesyntax=Your application won't work, \
\n please remove class ReferenceSyntaxException and replace with the class \
  jakarta.el.ELException from Jakarta Expression Language
jakarta-faces-remove-propertyresolver=Your application won't work, \
\n please remove class PropertyResolver and replace with the class \
  jakarta.el.ELResolver from Jakarta Expression Language
jakarta-faces-remove-propertynotfound=Your application won't work, \
\n please remove class PropertyNotFoundException and replace with the class \
  jakarta.el.PropertyNotFoundException from Jakarta Expression Language
jakarta-faces-remove-mnotfoundexception=Your application won't work, \
\n please remove class MethodNotFoundException and replace with the class \
  jakarta.el.MethodNotFoundException from Jakarta Expression Language
jakarta-faces-remove-evaluationexception=Your application won't work, \
\n please remove class EvaluationException and replace with the class \
  jakarta.el.ELException from Jakarta Expression Language
jakarta-faces-remove-legacyvaluebinding=Your application won't work, \
\n please remove class LegacyValueBinding and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-legacymbinding=Your application won't work, \
\n please remove class LegacyMethodBinding and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-legacyelcontext=Your application won't work, \
\n please remove class LegacyELContext and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-mbindingvalue=Your application won't work, \
\n please remove class MethodBindingValueChangeListener and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-mbindingvalidator=Your application won't work, \
\n please remove class MethodBindingValidator and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-mbindingadapter=Your application won't work, \
\n please remove class MethodBindingAdapterBase and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-variableresolverimpl=Your application won't work, \
\n please remove class VariableResolverImpl and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-variableresolverchain=Your application won't work, \
\n please remove class VariableResolverChainWrapper and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-propertyresolverimpl=Your application won't work, \
\n please remove class PropertyResolverImpl and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-propertyresolverchain=Your application won't work, \
\n please remove class PropertyResolverChainWrapper and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-dummyproperty=Your application won't work, \
\n please remove class DummyPropertyResolverImpl and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-chainawarevariable=Your application won't work, \
\n please remove class ChainAwareVariableResolver and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-valueexpression=Your application won't work, \
\n please remove class ValueExpressionValueBindingAdapter and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-valuebindingvalue=Your application won't work, \
\n please remove class ValueBindingValueExpressionAdapter and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-mexpressionadapter=Your application won't work, \
\n please remove class MethodExpressionMethodBindingAdapter and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-mbindingmexpression=Your application won't work, \
\n please remove class MethodBindingMethodExpressionAdapter and replace with new classes from Jakarta Expression Language
jakarta-faces-remove-applicationscoped=Your application won't work, \
\n please remove class jakarta.faces.bean.ApplicationScoped and replace with \
\n class jakarta.enterprise.context.ApplicationScoped that is a CDI build-in scope
jakarta-faces-remove-customscoped=Your application won't work, \
\n please remove class jakarta.faces.bean.CustomScoped and replace with \
\n CDI custom scopes and jakarta.enterprise.context.spi.Context
jakarta-faces-remove-managedbean=Your application won't work, \
\n please remove class jakarta.faces.bean.ManagedBean and replace with \
\n CDI scopes and naming
jakarta-faces-remove-managedproperty=Your application won't work, \
\n please remove class jakarta.faces.bean.ManagedProperty and replace with \
\n class jakarta.faces.annotation.ManagedProperty
jakarta-faces-remove-nonescoped=Your application won't work, \
\n please remove class jakarta.faces.bean.NoneScoped and replace with \
\n class jakarta.enterprise.context.Dependent from CDI
jakarta-faces-remove-referencedbean=Your application won't work, \
\n please remove class jakarta.faces.bean.ReferencedBean. \
\n There is no direct replacement for this other than using the XML variant in faces-config.xml
jakarta-faces-remove-requestscoped=Your application won't work, \
\n please remove class jakarta.faces.bean.RequestScoped and replace with \
\n class jakarta.enterprise.context.RequestScoped that is a CDI build-in scope
jakarta-faces-remove-sesionscoped=Your application won't work, \
\n please remove class jakarta.faces.bean.SessionScoped and replace with \
\n class jakarta.enterprise.context.SessionScoped that is a CDI build-in scope
jakarta-faces-remove-viewscoped=Your application won't work, \
\n please remove class jakarta.faces.bean.ViewScoped and replace with \
\n class jakarta.faces.view.ViewScoped that is a CDI custom scope