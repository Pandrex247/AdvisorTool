# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2023 Payara Foundation and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://github.com/payara/Payara/blob/master/LICENSE.txt
# See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at glassfish/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# The Payara Foundation designates this particular file as subject to the "Classpath"
# exception as provided by the Payara Foundation in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#
jakarta-authentication-issue-87-case-1=Jakarta Authentication 3.0 Issue # 87 \
\n jakarta.security.auth.message.MessageInfo.getMap was changed from \
\n Map getMap(); \
\n to \n Map<String, Object> getMap();
jakarta-authentication-issue-87-case-2=Jakarta Authentication 3.0 Issue # 87 \
\n jakarta.security.auth.message.config.AuthConfigFactory.registerConfigProvider was changed from  \
\n String registerConfigProvider(String className, Map properties, String layer, String appContext, String description) \
\n to \n String registerConfigProvider(String className, Map<String, String> properties, String layer, String appContext, String description)
jakarta-authentication-issue-87-case-3=Jakarta Authentication 3.0 Issue # 87 \
\n jakarta.security.auth.message.config.ClientAuthConfig.getAuthContext was changed from \
\n ClientAuthContext getAuthContext(String authContextID, Subject clientSubject, Map properties) throws AuthException \
\n to \n ClientAuthContext getAuthContext(String authContextID, Subject clientSubject, Map<String, Object> properties) throws AuthException
jakarta-authentication-issue-87-case-4=Jakarta Authentication 3.0 Issue # 87 \
\n jakarta.security.auth.message.config.ServerAuthConfig.getAuthContext was changed from \
\n ServerAuthContext getAuthContext(String authContextID, Subject serverSubject, Map properties) throws AuthException \
\n to \n ServerAuthContext getAuthContext(String authContextID, Subject serverSubject, Map<String, Object> properties) throws AuthException
jakarta-authentication-issue-87-case-5=Jakarta Authentication 3.0 Issue # 87 \
\n jakarta.security.auth.message.module.ClientAuthModule.initialize was changed from \
\n void initialize(MessagePolicy requestPolicy, MessagePolicy responsePolicy, CallbackHandler handler, Map options) throws AuthException \
\n to \n void initialize(MessagePolicy requestPolicy, MessagePolicy responsePolicy, CallbackHandler handler, Map<String, Object> options) throws
jakarta-authentication-issue-87-case-6=Jakarta Authentication 3.0 Issue # 87 \
\n jakarta.security.auth.message.module.ClientAuthModule.getSupportedMessageTypes was changed from \
\n Class[] getSupportedMessageTypes() \
\n to \n Class<?>[] getSupportedMessageTypes()
jakarta-authentication-issue-87-case-7=Jakarta Authentication 3.0 Issue # 87 \
\n jakarta.security.auth.message.module.ServerAuthModule.initialize was changed from \
\n void initialize(MessagePolicy requestPolicy, MessagePolicy responsePolicy, CallbackHandler handler, Map options) throws AuthException \
\n to \n void initialize(MessagePolicy requestPolicy, MessagePolicy responsePolicy, CallbackHandler handler, Map<String, Object> options) throws AuthException
jakarta-authentication-issue-87-case-8=Jakarta Authentication 3.0 Issue # 87 \
\n jakarta.security.auth.message.module.ServerAuthModule.getSupportedMessageTypes was changed from \
\n Class[] getSupportedMessageTypes() \
\n to \n Class<?>[] getSupportedMessageTypes()
jakarta-authentication-issue-130-case-1=Jakarta Authentication 3.0 Issue # 130 \
\n jakarta.security.auth.message.ClientAuth.validateResponse was changed from \
\n AuthStatus validateResponse(MessageInfo messageInfo, Subject clientSubject, Subject serviceSubject) throws AuthException \
\n to \n default AuthStatus validateResponse(MessageInfo messageInfo, Subject clientSubject, Subject serviceSubject) throws AuthException \
\n Now it is not necesary to implement the method.
jakarta-authentication-issue-130-case-2=Jakarta Authentication 3.0 Issue # 130 \
\n jakarta.security.auth.message.ClientAuth.cleanSubject was changed from \
\n void cleanSubject(MessageInfo messageInfo, Subject subject) throws AuthException \
\n to \n default void cleanSubject(MessageInfo messageInfo, Subject subject) throws AuthException \
\n Now it is not necesary to implement the method.
jakarta-authentication-issue-130-case-3=Jakarta Authentication 3.0 Issue # 130 \
\n jakarta.security.auth.message.ServerAuth.secureResponse was changed from \
\n AuthStatus secureResponse(MessageInfo messageInfo, Subject serviceSubject) throws AuthException \
\n to \n default AuthStatus secureResponse(MessageInfo messageInfo, Subject serviceSubject) throws AuthException \
\n Now it is not necesary to implement the method.
jakarta-authentication-issue-130-case-4=Jakarta Authentication 3.0 Issue # 130 \
\n jakarta.security.auth.message.ServerAuth.cleanSubject was changed from \
\n void cleanSubject(MessageInfo messageInfo, Subject subject) throws AuthException \
\n to \n default void cleanSubject(MessageInfo messageInfo, Subject subject) throws AuthException \
\n Now it is not necesary to implement the method.
jakarta-authentication-issue-138-case-1=Jakarta Authentication 3.0 Issue # 138 \
\n jakarta.security.auth.message.config.AuthConfigFactory.getFactorySecurityPermission was marked as deprecated \
\n We recommend to stop using because in next releases of Jakarta this will be removed.
jakarta-authentication-issue-138-case-2=Jakarta Authentication 3.0 Issue # 138 \
\n jakarta.security.auth.message.config.AuthConfigFactory.setFactorySecurityPermission was marked as deprecated \
\n We recommend to stop using because in next releases of Jakarta this will be removed.
jakarta-authentication-issue-138-case-3=Jakarta Authentication 3.0 Issue # 138 \
\n jakarta.security.auth.message.config.AuthConfigFactory.providerRegistrationSecurityPermission was marked as deprecated \
\n We recommend to stop using because in next releases of Jakarta this will be removed.